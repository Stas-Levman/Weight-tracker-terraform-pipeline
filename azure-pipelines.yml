resources:
  repositories: 
  - repository: Weight-tracker-terraform-pipeline
    type: github
    name: sincros121/Weight-tracker-terraform-pipeline
    endpoint: sincros121
    ref: main
    trigger:
      batch: true
      branches:
        include:
        - main
      paths:
        exclude:
          - azure-pipelines.yml
          - templates/*
          - templates


pool: 'self-hosted-stas'


stages:
- stage: Prepare_terraform
  displayName: Prepare terraform

  jobs:
    - job: Initialize_terraform
      displayName: Initialize terraform

      steps:
      - checkout: self
        clean: false
        displayName: Clone latest terraform repo

      - script: |
          terraform init
        displayName: Initialize terraform
        workingDirectory: root_module

    - job: Workspaces
      displayName: Ensure workspaces exist
      dependsOn: Initialize_terraform

      steps:
      - checkout: none

      - script: |
          terraform workspace select stage || terraform workspace new stage
        displayName: Ensure workspace stage exist
        workingDirectory: root_module
        continueOnError: true
        failOnStderr: false

      - script: |
          terraform workspace select prod || terraform workspace new prod
        displayName: Ensure workspace prod exist
        workingDirectory: root_module
        continueOnError: true
        failOnStderr: false



- stage: Stage_infrastructure
  displayName: Stage infrastructure deploy

  variables: 
  - group: vault secrets - stage
  - name: ip_address
    value: $(az network public-ip show -g weight-tracker-$(Environment.Name)-rg -n front-public-ip --query "ipAddress")


  jobs:
  - deployment: Deploy
    environment: stage
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadSecureFile@1
            name: stage_tfvars
            displayName: 'Download stage tfvars file'
            inputs:
              secureFile: 'stage.tfvars'    

          - script: |
              terraform workspace select $(Environment.Name)
            displayName: Select workspace
            workingDirectory: root_module

          - script: |
              terraform apply -var-file "$(stage_tfvars.secureFilePath)" -auto-approve
            displayName: Deploy infrastructure using .tfvars file
            workingDirectory: root_module

          - template: templates/Okta-API-call-stage.yaml
            
 


- stage: Prod_infrastructure
  displayName: Prod infrastructure deploy

  variables: 
  - group: vault secrets - prod
  - name: ip_address
    value: $(az network public-ip show -g weight-tracker-$(Environment.Name)-rg -n front-public-ip --query "ipAddress")

  jobs:
  - deployment: Deploy
    environment: prod
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadSecureFile@1
            name: prod_tfvars
            displayName: 'Download prod tfvars file'
            inputs:
              secureFile: 'prod.tfvars'    

          - script: |
              terraform workspace select $(Environment.Name)
            displayName: Select workspace
            workingDirectory: root_module

          - script: |
              terraform apply -var-file "$(prod_tfvars.secureFilePath)" -auto-approve
            displayName: Deploy infrastructure using .tfvars file
            workingDirectory: root_module

          - template: templates/Okta-API-call-prod.yaml